/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommunicationCreateNestedManyWithoutCompaniesInput } from "./CommunicationCreateNestedManyWithoutCompaniesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { DataRequestCreateNestedManyWithoutCompaniesInput } from "./DataRequestCreateNestedManyWithoutCompaniesInput";
import { DataUploadCreateNestedManyWithoutCompaniesInput } from "./DataUploadCreateNestedManyWithoutCompaniesInput";
import { PrivacyAgreementCreateNestedManyWithoutCompaniesInput } from "./PrivacyAgreementCreateNestedManyWithoutCompaniesInput";

@InputType()
class CompanyCreateInput {
  @ApiProperty({
    required: false,
    type: () => CommunicationCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => CommunicationCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => CommunicationCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  communications?: CommunicationCreateNestedManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => DataRequestCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => DataRequestCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => DataRequestCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  dataRequests?: DataRequestCreateNestedManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => DataUploadCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => DataUploadCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => DataUploadCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  dataUploads?: DataUploadCreateNestedManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  industry?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  privacyAgreement?: string | null;

  @ApiProperty({
    required: false,
    type: () => PrivacyAgreementCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => PrivacyAgreementCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => PrivacyAgreementCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  privacyAgreements?: PrivacyAgreementCreateNestedManyWithoutCompaniesInput;
}

export { CompanyCreateInput as CompanyCreateInput };
