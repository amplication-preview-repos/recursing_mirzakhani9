datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  communications    Communication[]
  createdAt         DateTime           @default(now())
  dataRequests      DataRequest[]
  dataUploads       DataUpload[]
  id                String             @id @default(cuid())
  industry          String?
  name              String?
  privacyAgreement  String?
  privacyAgreements PrivacyAgreement[]
  updatedAt         DateTime           @updatedAt
}

model DataRequest {
  company      Company?  @relation(fields: [companyId], references: [id])
  companyId    String?
  createdAt    DateTime  @default(now())
  id           String    @id @default(cuid())
  requestDate  DateTime?
  responseData Json?
  responseDate DateTime?
  status       String?
  typeField    String?
  updatedAt    DateTime  @updatedAt
  user         User?     @relation(fields: [userId], references: [id])
  userId       String?
}

model DataUpload {
  company     Company?  @relation(fields: [companyId], references: [id])
  companyId   String?
  createdAt   DateTime  @default(now())
  dataContent Json?
  dataType    String?
  id          String    @id @default(cuid())
  updatedAt   DateTime  @updatedAt
  uploadDate  DateTime?
  userId      String?
}

model Communication {
  company   Company?  @relation(fields: [companyId], references: [id])
  companyId String?
  content   String?
  createdAt DateTime  @default(now())
  date      DateTime?
  id        String    @id @default(cuid())
  typeField String?
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model PrivacyAgreement {
  company    Company?  @relation(fields: [companyId], references: [id])
  companyId  String?
  content    String?
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  updatedAt  DateTime  @updatedAt
  uploadDate DateTime?
}

model User {
  communications Communication[]
  createdAt      DateTime        @default(now())
  dataRequests   DataRequest[]
  email          String?         @unique
  firstName      String?
  id             String          @id @default(cuid())
  lastName       String?
  name           String?
  password       String
  roles          Json
  updatedAt      DateTime        @updatedAt
  username       String          @unique
}
